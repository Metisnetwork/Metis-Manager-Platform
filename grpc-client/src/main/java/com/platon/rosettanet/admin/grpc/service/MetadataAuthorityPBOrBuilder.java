// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/types/metadata.proto

package com.platon.rosettanet.admin.grpc.service;

public interface MetadataAuthorityPBOrBuilder extends
    // @@protoc_insertion_point(interface_extends:types.MetadataAuthorityPB)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 元数据授权申请Id
   * </pre>
   *
   * <code>string metadata_auth_id = 1;</code>
   * @return The metadataAuthId.
   */
  java.lang.String getMetadataAuthId();
  /**
   * <pre>
   * 元数据授权申请Id
   * </pre>
   *
   * <code>string metadata_auth_id = 1;</code>
   * @return The bytes for metadataAuthId.
   */
  com.google.protobuf.ByteString
      getMetadataAuthIdBytes();

  /**
   * <pre>
   * 申请人地址
   * </pre>
   *
   * <code>string user = 2;</code>
   * @return The user.
   */
  java.lang.String getUser();
  /**
   * <pre>
   * 申请人地址
   * </pre>
   *
   * <code>string user = 2;</code>
   * @return The bytes for user.
   */
  com.google.protobuf.ByteString
      getUserBytes();

  /**
   * <pre>
   * 申请人类型
   * </pre>
   *
   * <code>.api.protobuf.UserType user_type = 3;</code>
   * @return The enum numeric value on the wire for userType.
   */
  int getUserTypeValue();
  /**
   * <pre>
   * 申请人类型
   * </pre>
   *
   * <code>.api.protobuf.UserType user_type = 3;</code>
   * @return The userType.
   */
  com.platon.rosettanet.admin.grpc.service.UserType getUserType();

  /**
   * <pre>
   * 元数据使用授权信息
   * </pre>
   *
   * <code>.types.MetadataAuthority auth = 4;</code>
   * @return Whether the auth field is set.
   */
  boolean hasAuth();
  /**
   * <pre>
   * 元数据使用授权信息
   * </pre>
   *
   * <code>.types.MetadataAuthority auth = 4;</code>
   * @return The auth.
   */
  com.platon.rosettanet.admin.grpc.service.MetadataAuthority getAuth();
  /**
   * <pre>
   * 元数据使用授权信息
   * </pre>
   *
   * <code>.types.MetadataAuthority auth = 4;</code>
   */
  com.platon.rosettanet.admin.grpc.service.MetadataAuthorityOrBuilder getAuthOrBuilder();

  /**
   * <pre>
   * 审核结果
   * </pre>
   *
   * <code>.api.protobuf.AuditMetadataOption audit_option = 5;</code>
   * @return The enum numeric value on the wire for auditOption.
   */
  int getAuditOptionValue();
  /**
   * <pre>
   * 审核结果
   * </pre>
   *
   * <code>.api.protobuf.AuditMetadataOption audit_option = 5;</code>
   * @return The auditOption.
   */
  com.platon.rosettanet.admin.grpc.service.AuditMetadataOption getAuditOption();

  /**
   * <pre>
   * 审核意见 (允许""字符)
   * </pre>
   *
   * <code>string audit_suggestion = 6;</code>
   * @return The auditSuggestion.
   */
  java.lang.String getAuditSuggestion();
  /**
   * <pre>
   * 审核意见 (允许""字符)
   * </pre>
   *
   * <code>string audit_suggestion = 6;</code>
   * @return The bytes for auditSuggestion.
   */
  com.google.protobuf.ByteString
      getAuditSuggestionBytes();

  /**
   * <pre>
   * 对应数据授权信息中元数据的使用实况
   * </pre>
   *
   * <code>.types.MetadataUsedQuo used_quo = 7;</code>
   * @return Whether the usedQuo field is set.
   */
  boolean hasUsedQuo();
  /**
   * <pre>
   * 对应数据授权信息中元数据的使用实况
   * </pre>
   *
   * <code>.types.MetadataUsedQuo used_quo = 7;</code>
   * @return The usedQuo.
   */
  com.platon.rosettanet.admin.grpc.service.MetadataUsedQuo getUsedQuo();
  /**
   * <pre>
   * 对应数据授权信息中元数据的使用实况
   * </pre>
   *
   * <code>.types.MetadataUsedQuo used_quo = 7;</code>
   */
  com.platon.rosettanet.admin.grpc.service.MetadataUsedQuoOrBuilder getUsedQuoOrBuilder();

  /**
   * <pre>
   * 发起授权申请的时间 (单位: ms)
   * </pre>
   *
   * <code>uint64 apply_at = 8;</code>
   * @return The applyAt.
   */
  long getApplyAt();

  /**
   * <pre>
   * 审核授权申请的时间 (单位: ms)
   * </pre>
   *
   * <code>uint64 audit_at = 9;</code>
   * @return The auditAt.
   */
  long getAuditAt();

  /**
   * <pre>
   * 数据授权信息的状态 (0: 未知; 1: 还未发布的数据授权; 2: 已发布的数据授权; 3: 已撤销的数据授权 &lt;失效前主动撤回的&gt;; 4: 已经失效的数据授权 &lt;过期or达到使用上限的&gt;)
   * </pre>
   *
   * <code>.api.protobuf.MetadataAuthorityState state = 10;</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <pre>
   * 数据授权信息的状态 (0: 未知; 1: 还未发布的数据授权; 2: 已发布的数据授权; 3: 已撤销的数据授权 &lt;失效前主动撤回的&gt;; 4: 已经失效的数据授权 &lt;过期or达到使用上限的&gt;)
   * </pre>
   *
   * <code>.api.protobuf.MetadataAuthorityState state = 10;</code>
   * @return The state.
   */
  com.platon.rosettanet.admin.grpc.service.MetadataAuthorityState getState();
}
