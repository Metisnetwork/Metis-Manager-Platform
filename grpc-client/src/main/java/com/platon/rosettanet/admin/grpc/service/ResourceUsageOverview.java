// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/types/resourcedata.proto

package com.platon.rosettanet.admin.grpc.service;

/**
 * <pre>
 * 系统资源消耗概览
 * </pre>
 *
 * Protobuf type {@code types.ResourceUsageOverview}
 */
public final class ResourceUsageOverview extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:types.ResourceUsageOverview)
    ResourceUsageOverviewOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ResourceUsageOverview.newBuilder() to construct.
  private ResourceUsageOverview(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ResourceUsageOverview() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ResourceUsageOverview();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ResourceUsageOverview(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 16: {

            totalMem_ = input.readUInt64();
            break;
          }
          case 24: {

            usedMem_ = input.readUInt64();
            break;
          }
          case 32: {

            totalProcessor_ = input.readUInt32();
            break;
          }
          case 40: {

            usedProcessor_ = input.readUInt32();
            break;
          }
          case 48: {

            totalBandwidth_ = input.readUInt64();
            break;
          }
          case 56: {

            usedBandwidth_ = input.readUInt64();
            break;
          }
          case 64: {

            totalDisk_ = input.readUInt64();
            break;
          }
          case 72: {

            usedDisk_ = input.readUInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.platon.rosettanet.admin.grpc.service.ResourceDataProto.internal_static_types_ResourceUsageOverview_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.platon.rosettanet.admin.grpc.service.ResourceDataProto.internal_static_types_ResourceUsageOverview_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview.class, com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview.Builder.class);
  }

  public static final int TOTAL_MEM_FIELD_NUMBER = 2;
  private long totalMem_;
  /**
   * <pre>
   * 服务系统的总内存 (单位: byte)
   * </pre>
   *
   * <code>uint64 total_mem = 2;</code>
   * @return The totalMem.
   */
  @java.lang.Override
  public long getTotalMem() {
    return totalMem_;
  }

  public static final int USED_MEM_FIELD_NUMBER = 3;
  private long usedMem_;
  /**
   * <pre>
   * 服务系统的已用内存  (单位: byte)
   * </pre>
   *
   * <code>uint64 used_mem = 3;</code>
   * @return The usedMem.
   */
  @java.lang.Override
  public long getUsedMem() {
    return usedMem_;
  }

  public static final int TOTAL_PROCESSOR_FIELD_NUMBER = 4;
  private int totalProcessor_;
  /**
   * <pre>
   * 服务的总内核数 (单位: 个)
   * </pre>
   *
   * <code>uint32 total_processor = 4;</code>
   * @return The totalProcessor.
   */
  @java.lang.Override
  public int getTotalProcessor() {
    return totalProcessor_;
  }

  public static final int USED_PROCESSOR_FIELD_NUMBER = 5;
  private int usedProcessor_;
  /**
   * <pre>
   * 服务的已用内核数 (单位: 个)
   * </pre>
   *
   * <code>uint32 used_processor = 5;</code>
   * @return The usedProcessor.
   */
  @java.lang.Override
  public int getUsedProcessor() {
    return usedProcessor_;
  }

  public static final int TOTAL_BANDWIDTH_FIELD_NUMBER = 6;
  private long totalBandwidth_;
  /**
   * <pre>
   * 服务的总带宽数 (单位: bps)
   * </pre>
   *
   * <code>uint64 total_bandwidth = 6;</code>
   * @return The totalBandwidth.
   */
  @java.lang.Override
  public long getTotalBandwidth() {
    return totalBandwidth_;
  }

  public static final int USED_BANDWIDTH_FIELD_NUMBER = 7;
  private long usedBandwidth_;
  /**
   * <pre>
   * 服务的已用带宽数 (单位: bps)
   * </pre>
   *
   * <code>uint64 used_bandwidth = 7;</code>
   * @return The usedBandwidth.
   */
  @java.lang.Override
  public long getUsedBandwidth() {
    return usedBandwidth_;
  }

  public static final int TOTAL_DISK_FIELD_NUMBER = 8;
  private long totalDisk_;
  /**
   * <pre>
   * 服务的总磁盘空间 (单位: byte)
   * </pre>
   *
   * <code>uint64 total_disk = 8;</code>
   * @return The totalDisk.
   */
  @java.lang.Override
  public long getTotalDisk() {
    return totalDisk_;
  }

  public static final int USED_DISK_FIELD_NUMBER = 9;
  private long usedDisk_;
  /**
   * <pre>
   * 服务的已用磁盘空间 (单位: byte)
   * </pre>
   *
   * <code>uint64 used_disk = 9;</code>
   * @return The usedDisk.
   */
  @java.lang.Override
  public long getUsedDisk() {
    return usedDisk_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (totalMem_ != 0L) {
      output.writeUInt64(2, totalMem_);
    }
    if (usedMem_ != 0L) {
      output.writeUInt64(3, usedMem_);
    }
    if (totalProcessor_ != 0) {
      output.writeUInt32(4, totalProcessor_);
    }
    if (usedProcessor_ != 0) {
      output.writeUInt32(5, usedProcessor_);
    }
    if (totalBandwidth_ != 0L) {
      output.writeUInt64(6, totalBandwidth_);
    }
    if (usedBandwidth_ != 0L) {
      output.writeUInt64(7, usedBandwidth_);
    }
    if (totalDisk_ != 0L) {
      output.writeUInt64(8, totalDisk_);
    }
    if (usedDisk_ != 0L) {
      output.writeUInt64(9, usedDisk_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (totalMem_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, totalMem_);
    }
    if (usedMem_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, usedMem_);
    }
    if (totalProcessor_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, totalProcessor_);
    }
    if (usedProcessor_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, usedProcessor_);
    }
    if (totalBandwidth_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, totalBandwidth_);
    }
    if (usedBandwidth_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, usedBandwidth_);
    }
    if (totalDisk_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(8, totalDisk_);
    }
    if (usedDisk_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(9, usedDisk_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview)) {
      return super.equals(obj);
    }
    com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview other = (com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview) obj;

    if (getTotalMem()
        != other.getTotalMem()) return false;
    if (getUsedMem()
        != other.getUsedMem()) return false;
    if (getTotalProcessor()
        != other.getTotalProcessor()) return false;
    if (getUsedProcessor()
        != other.getUsedProcessor()) return false;
    if (getTotalBandwidth()
        != other.getTotalBandwidth()) return false;
    if (getUsedBandwidth()
        != other.getUsedBandwidth()) return false;
    if (getTotalDisk()
        != other.getTotalDisk()) return false;
    if (getUsedDisk()
        != other.getUsedDisk()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TOTAL_MEM_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalMem());
    hash = (37 * hash) + USED_MEM_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUsedMem());
    hash = (37 * hash) + TOTAL_PROCESSOR_FIELD_NUMBER;
    hash = (53 * hash) + getTotalProcessor();
    hash = (37 * hash) + USED_PROCESSOR_FIELD_NUMBER;
    hash = (53 * hash) + getUsedProcessor();
    hash = (37 * hash) + TOTAL_BANDWIDTH_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalBandwidth());
    hash = (37 * hash) + USED_BANDWIDTH_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUsedBandwidth());
    hash = (37 * hash) + TOTAL_DISK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalDisk());
    hash = (37 * hash) + USED_DISK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUsedDisk());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 系统资源消耗概览
   * </pre>
   *
   * Protobuf type {@code types.ResourceUsageOverview}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:types.ResourceUsageOverview)
      com.platon.rosettanet.admin.grpc.service.ResourceUsageOverviewOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.platon.rosettanet.admin.grpc.service.ResourceDataProto.internal_static_types_ResourceUsageOverview_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.platon.rosettanet.admin.grpc.service.ResourceDataProto.internal_static_types_ResourceUsageOverview_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview.class, com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview.Builder.class);
    }

    // Construct using com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      totalMem_ = 0L;

      usedMem_ = 0L;

      totalProcessor_ = 0;

      usedProcessor_ = 0;

      totalBandwidth_ = 0L;

      usedBandwidth_ = 0L;

      totalDisk_ = 0L;

      usedDisk_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.platon.rosettanet.admin.grpc.service.ResourceDataProto.internal_static_types_ResourceUsageOverview_descriptor;
    }

    @java.lang.Override
    public com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview getDefaultInstanceForType() {
      return com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview.getDefaultInstance();
    }

    @java.lang.Override
    public com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview build() {
      com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview buildPartial() {
      com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview result = new com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview(this);
      result.totalMem_ = totalMem_;
      result.usedMem_ = usedMem_;
      result.totalProcessor_ = totalProcessor_;
      result.usedProcessor_ = usedProcessor_;
      result.totalBandwidth_ = totalBandwidth_;
      result.usedBandwidth_ = usedBandwidth_;
      result.totalDisk_ = totalDisk_;
      result.usedDisk_ = usedDisk_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview) {
        return mergeFrom((com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview other) {
      if (other == com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview.getDefaultInstance()) return this;
      if (other.getTotalMem() != 0L) {
        setTotalMem(other.getTotalMem());
      }
      if (other.getUsedMem() != 0L) {
        setUsedMem(other.getUsedMem());
      }
      if (other.getTotalProcessor() != 0) {
        setTotalProcessor(other.getTotalProcessor());
      }
      if (other.getUsedProcessor() != 0) {
        setUsedProcessor(other.getUsedProcessor());
      }
      if (other.getTotalBandwidth() != 0L) {
        setTotalBandwidth(other.getTotalBandwidth());
      }
      if (other.getUsedBandwidth() != 0L) {
        setUsedBandwidth(other.getUsedBandwidth());
      }
      if (other.getTotalDisk() != 0L) {
        setTotalDisk(other.getTotalDisk());
      }
      if (other.getUsedDisk() != 0L) {
        setUsedDisk(other.getUsedDisk());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long totalMem_ ;
    /**
     * <pre>
     * 服务系统的总内存 (单位: byte)
     * </pre>
     *
     * <code>uint64 total_mem = 2;</code>
     * @return The totalMem.
     */
    @java.lang.Override
    public long getTotalMem() {
      return totalMem_;
    }
    /**
     * <pre>
     * 服务系统的总内存 (单位: byte)
     * </pre>
     *
     * <code>uint64 total_mem = 2;</code>
     * @param value The totalMem to set.
     * @return This builder for chaining.
     */
    public Builder setTotalMem(long value) {
      
      totalMem_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 服务系统的总内存 (单位: byte)
     * </pre>
     *
     * <code>uint64 total_mem = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalMem() {
      
      totalMem_ = 0L;
      onChanged();
      return this;
    }

    private long usedMem_ ;
    /**
     * <pre>
     * 服务系统的已用内存  (单位: byte)
     * </pre>
     *
     * <code>uint64 used_mem = 3;</code>
     * @return The usedMem.
     */
    @java.lang.Override
    public long getUsedMem() {
      return usedMem_;
    }
    /**
     * <pre>
     * 服务系统的已用内存  (单位: byte)
     * </pre>
     *
     * <code>uint64 used_mem = 3;</code>
     * @param value The usedMem to set.
     * @return This builder for chaining.
     */
    public Builder setUsedMem(long value) {
      
      usedMem_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 服务系统的已用内存  (单位: byte)
     * </pre>
     *
     * <code>uint64 used_mem = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearUsedMem() {
      
      usedMem_ = 0L;
      onChanged();
      return this;
    }

    private int totalProcessor_ ;
    /**
     * <pre>
     * 服务的总内核数 (单位: 个)
     * </pre>
     *
     * <code>uint32 total_processor = 4;</code>
     * @return The totalProcessor.
     */
    @java.lang.Override
    public int getTotalProcessor() {
      return totalProcessor_;
    }
    /**
     * <pre>
     * 服务的总内核数 (单位: 个)
     * </pre>
     *
     * <code>uint32 total_processor = 4;</code>
     * @param value The totalProcessor to set.
     * @return This builder for chaining.
     */
    public Builder setTotalProcessor(int value) {
      
      totalProcessor_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 服务的总内核数 (单位: 个)
     * </pre>
     *
     * <code>uint32 total_processor = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalProcessor() {
      
      totalProcessor_ = 0;
      onChanged();
      return this;
    }

    private int usedProcessor_ ;
    /**
     * <pre>
     * 服务的已用内核数 (单位: 个)
     * </pre>
     *
     * <code>uint32 used_processor = 5;</code>
     * @return The usedProcessor.
     */
    @java.lang.Override
    public int getUsedProcessor() {
      return usedProcessor_;
    }
    /**
     * <pre>
     * 服务的已用内核数 (单位: 个)
     * </pre>
     *
     * <code>uint32 used_processor = 5;</code>
     * @param value The usedProcessor to set.
     * @return This builder for chaining.
     */
    public Builder setUsedProcessor(int value) {
      
      usedProcessor_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 服务的已用内核数 (单位: 个)
     * </pre>
     *
     * <code>uint32 used_processor = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearUsedProcessor() {
      
      usedProcessor_ = 0;
      onChanged();
      return this;
    }

    private long totalBandwidth_ ;
    /**
     * <pre>
     * 服务的总带宽数 (单位: bps)
     * </pre>
     *
     * <code>uint64 total_bandwidth = 6;</code>
     * @return The totalBandwidth.
     */
    @java.lang.Override
    public long getTotalBandwidth() {
      return totalBandwidth_;
    }
    /**
     * <pre>
     * 服务的总带宽数 (单位: bps)
     * </pre>
     *
     * <code>uint64 total_bandwidth = 6;</code>
     * @param value The totalBandwidth to set.
     * @return This builder for chaining.
     */
    public Builder setTotalBandwidth(long value) {
      
      totalBandwidth_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 服务的总带宽数 (单位: bps)
     * </pre>
     *
     * <code>uint64 total_bandwidth = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalBandwidth() {
      
      totalBandwidth_ = 0L;
      onChanged();
      return this;
    }

    private long usedBandwidth_ ;
    /**
     * <pre>
     * 服务的已用带宽数 (单位: bps)
     * </pre>
     *
     * <code>uint64 used_bandwidth = 7;</code>
     * @return The usedBandwidth.
     */
    @java.lang.Override
    public long getUsedBandwidth() {
      return usedBandwidth_;
    }
    /**
     * <pre>
     * 服务的已用带宽数 (单位: bps)
     * </pre>
     *
     * <code>uint64 used_bandwidth = 7;</code>
     * @param value The usedBandwidth to set.
     * @return This builder for chaining.
     */
    public Builder setUsedBandwidth(long value) {
      
      usedBandwidth_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 服务的已用带宽数 (单位: bps)
     * </pre>
     *
     * <code>uint64 used_bandwidth = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearUsedBandwidth() {
      
      usedBandwidth_ = 0L;
      onChanged();
      return this;
    }

    private long totalDisk_ ;
    /**
     * <pre>
     * 服务的总磁盘空间 (单位: byte)
     * </pre>
     *
     * <code>uint64 total_disk = 8;</code>
     * @return The totalDisk.
     */
    @java.lang.Override
    public long getTotalDisk() {
      return totalDisk_;
    }
    /**
     * <pre>
     * 服务的总磁盘空间 (单位: byte)
     * </pre>
     *
     * <code>uint64 total_disk = 8;</code>
     * @param value The totalDisk to set.
     * @return This builder for chaining.
     */
    public Builder setTotalDisk(long value) {
      
      totalDisk_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 服务的总磁盘空间 (单位: byte)
     * </pre>
     *
     * <code>uint64 total_disk = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalDisk() {
      
      totalDisk_ = 0L;
      onChanged();
      return this;
    }

    private long usedDisk_ ;
    /**
     * <pre>
     * 服务的已用磁盘空间 (单位: byte)
     * </pre>
     *
     * <code>uint64 used_disk = 9;</code>
     * @return The usedDisk.
     */
    @java.lang.Override
    public long getUsedDisk() {
      return usedDisk_;
    }
    /**
     * <pre>
     * 服务的已用磁盘空间 (单位: byte)
     * </pre>
     *
     * <code>uint64 used_disk = 9;</code>
     * @param value The usedDisk to set.
     * @return This builder for chaining.
     */
    public Builder setUsedDisk(long value) {
      
      usedDisk_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 服务的已用磁盘空间 (单位: byte)
     * </pre>
     *
     * <code>uint64 used_disk = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearUsedDisk() {
      
      usedDisk_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:types.ResourceUsageOverview)
  }

  // @@protoc_insertion_point(class_scope:types.ResourceUsageOverview)
  private static final com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview();
  }

  public static com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ResourceUsageOverview>
      PARSER = new com.google.protobuf.AbstractParser<ResourceUsageOverview>() {
    @java.lang.Override
    public ResourceUsageOverview parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ResourceUsageOverview(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ResourceUsageOverview> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ResourceUsageOverview> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.platon.rosettanet.admin.grpc.service.ResourceUsageOverview getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

