// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/types/metadata.proto

package com.platon.rosettanet.admin.grpc.service;

public interface MetadataDetailOrBuilder extends
    // @@protoc_insertion_point(interface_extends:types.MetadataDetail)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 元数据摘要
   * </pre>
   *
   * <code>.types.MetadataSummary metadata_summary = 1;</code>
   * @return Whether the metadataSummary field is set.
   */
  boolean hasMetadataSummary();
  /**
   * <pre>
   * 元数据摘要
   * </pre>
   *
   * <code>.types.MetadataSummary metadata_summary = 1;</code>
   * @return The metadataSummary.
   */
  com.platon.rosettanet.admin.grpc.service.MetadataSummary getMetadataSummary();
  /**
   * <pre>
   * 元数据摘要
   * </pre>
   *
   * <code>.types.MetadataSummary metadata_summary = 1;</code>
   */
  com.platon.rosettanet.admin.grpc.service.MetadataSummaryOrBuilder getMetadataSummaryOrBuilder();

  /**
   * <pre>
   * 元数据对应原始文件对外暴露的列描述列表
   * </pre>
   *
   * <code>repeated .types.MetadataColumn metadata_columns = 2;</code>
   */
  java.util.List<com.platon.rosettanet.admin.grpc.service.MetadataColumn> 
      getMetadataColumnsList();
  /**
   * <pre>
   * 元数据对应原始文件对外暴露的列描述列表
   * </pre>
   *
   * <code>repeated .types.MetadataColumn metadata_columns = 2;</code>
   */
  com.platon.rosettanet.admin.grpc.service.MetadataColumn getMetadataColumns(int index);
  /**
   * <pre>
   * 元数据对应原始文件对外暴露的列描述列表
   * </pre>
   *
   * <code>repeated .types.MetadataColumn metadata_columns = 2;</code>
   */
  int getMetadataColumnsCount();
  /**
   * <pre>
   * 元数据对应原始文件对外暴露的列描述列表
   * </pre>
   *
   * <code>repeated .types.MetadataColumn metadata_columns = 2;</code>
   */
  java.util.List<? extends com.platon.rosettanet.admin.grpc.service.MetadataColumnOrBuilder> 
      getMetadataColumnsOrBuilderList();
  /**
   * <pre>
   * 元数据对应原始文件对外暴露的列描述列表
   * </pre>
   *
   * <code>repeated .types.MetadataColumn metadata_columns = 2;</code>
   */
  com.platon.rosettanet.admin.grpc.service.MetadataColumnOrBuilder getMetadataColumnsOrBuilder(
      int index);

  /**
   * <pre>
   * 该元数据参与过得任务数 (已完成的和正在执行的)
   * </pre>
   *
   * <code>uint32 total_task_count = 3;</code>
   * @return The totalTaskCount.
   */
  int getTotalTaskCount();
}
