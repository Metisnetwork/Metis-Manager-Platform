// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/common/data.proto

package com.platon.rosettanet.admin.grpc.service;

public final class Data {
  private Data() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_api_protobuf_TaskResourceCostDeclare_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_api_protobuf_TaskResourceCostDeclare_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025lib/common/data.proto\022\014api.protobuf\"a\n" +
      "\027TaskResourceCostDeclare\022\016\n\006memory\030\001 \001(\004" +
      "\022\021\n\tprocessor\030\002 \001(\r\022\021\n\tbandwidth\030\003 \001(\004\022\020" +
      "\n\010duration\030\004 \001(\004B,\n(com.platon.rosettane" +
      "t.admin.grpc.serviceP\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_api_protobuf_TaskResourceCostDeclare_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_api_protobuf_TaskResourceCostDeclare_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_api_protobuf_TaskResourceCostDeclare_descriptor,
        new java.lang.String[] { "Memory", "Processor", "Bandwidth", "Duration", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
