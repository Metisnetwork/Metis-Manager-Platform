// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/types/metadata.proto

package com.platon.rosettanet.admin.grpc.service;

public interface MetadataAuthorityOrBuilder extends
    // @@protoc_insertion_point(interface_extends:types.MetadataAuthority)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 元数据所属的组织信息
   * </pre>
   *
   * <code>.api.protobuf.Organization owner = 1;</code>
   * @return Whether the owner field is set.
   */
  boolean hasOwner();
  /**
   * <pre>
   * 元数据所属的组织信息
   * </pre>
   *
   * <code>.api.protobuf.Organization owner = 1;</code>
   * @return The owner.
   */
  com.platon.rosettanet.admin.grpc.service.Organization getOwner();
  /**
   * <pre>
   * 元数据所属的组织信息
   * </pre>
   *
   * <code>.api.protobuf.Organization owner = 1;</code>
   */
  com.platon.rosettanet.admin.grpc.service.OrganizationOrBuilder getOwnerOrBuilder();

  /**
   * <pre>
   * 元数据Id
   * </pre>
   *
   * <code>string metadata_id = 2;</code>
   * @return The metadataId.
   */
  java.lang.String getMetadataId();
  /**
   * <pre>
   * 元数据Id
   * </pre>
   *
   * <code>string metadata_id = 2;</code>
   * @return The bytes for metadataId.
   */
  com.google.protobuf.ByteString
      getMetadataIdBytes();

  /**
   * <pre>
   * 元数据怎么使用
   * </pre>
   *
   * <code>.types.MetadataUsageRule usage_rule = 3;</code>
   * @return Whether the usageRule field is set.
   */
  boolean hasUsageRule();
  /**
   * <pre>
   * 元数据怎么使用
   * </pre>
   *
   * <code>.types.MetadataUsageRule usage_rule = 3;</code>
   * @return The usageRule.
   */
  com.platon.rosettanet.admin.grpc.service.MetadataUsageRule getUsageRule();
  /**
   * <pre>
   * 元数据怎么使用
   * </pre>
   *
   * <code>.types.MetadataUsageRule usage_rule = 3;</code>
   */
  com.platon.rosettanet.admin.grpc.service.MetadataUsageRuleOrBuilder getUsageRuleOrBuilder();
}
