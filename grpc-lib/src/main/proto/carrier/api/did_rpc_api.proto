syntax = "proto3";

option go_package = "github.com/datumtechs/datum-network-carrier/pb/carrier/api";
//一个proto文件会生成一个最外部类，里面会包含很多子类，指定这个proto文件生成的类所属的包名
option java_package = "com.platon.datum.admin.grpc.carrier.api";
//这个proto文件生成会为其中的所有message生成一个最外部类，此配置设置该类类名，如果没有指定此值，则类名为proto文件名的驼峰命名方法
option java_outer_classname = "DidRpcApi";

package carrier.api;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "carrier/types/common.proto";

message TxInfo {
  uint64          block_number = 1;
  string          tx_hash = 2;
  uint32          tx_index = 3;
}



// -- DID document --

message CreateDIDResponse {
  int32           status = 1;         // 响应码
  string          msg = 2;            // 错误信息
  string          did = 3;             // user's did
  TxInfo tx_info = 4;
}


service DIDService {
  rpc CreateDID (google.protobuf.Empty) returns (CreateDIDResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/did/createDID"
      body: "*"
    };
  }
}


// -- credential --

message ApplyVCReq {
  string          issuer_did = 1;
  string          issuer_url = 2;
  string          applicant_did = 3;
  string          context = 4;          //option, "" means default
  uint64          pct_id = 5;           //map定义
  string          claim = 6;            //map的json string
  string          expiration_date = 7;  //option, "" means default
  string          ext_info = 8;         //扩展字段, JSON, 透传到issuer
  string          req_digest = 9;       //请求摘要SHA3, option
  string          req_signature = 10;    //对请求摘要的签名。从req_digest,req_signature能恢复出签名私钥对应的公钥, option
}

message CreateVCRequest {
  string          applicant_did = 1;  // user's did
  string          context = 2;        // default ""
  uint64          pct_id = 3;         // pct id
  string          claim = 4;          //json string
  string          expiration_date = 5; //UTC time string, default ""
}

message CreateVCResponse {
  int32           status = 1;                      // 响应码
  string          msg = 2;                         // 错误信息
  string          vc = 3;                           // json string
  TxInfo tx_info = 4;
}



message DownloadVCReq {
  string          issuer_did = 1;
  string          issuer_url = 2;
  string          applicant_did = 3;
  string          req_digest = 4;     //请求摘要SHA3, option
  string          req_signature = 5;  //对请求摘要的签名。从req_digest,req_signature能恢复出签名私钥对应的公钥, option
}


message DownloadVCResponse {
  int32           status = 1;                       // 响应码
  string          msg = 2;                          // 错误信息
  string          vc =3;                            // json string
  string          ext_info = 4;                     //扩展字段, JSON
}

service VcService {
  rpc ApplyVCLocal (ApplyVCReq) returns (carrier.types.SimpleResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/did/applyVCLocal"
      body: "*"
    };
  }


  rpc ApplyVCRemote (ApplyVCReq) returns (carrier.types.SimpleResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/did/applyVCRemote"
      body: "*"
    };
  }

  rpc CreateVC (CreateVCRequest) returns (CreateVCResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/did/createVC"
      body: "*"
    };
  }

  rpc DownloadVCLocal (DownloadVCReq) returns (DownloadVCResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/did/downloadVCLocal"
      body: "*"
    };
  }

  rpc DownloadVCRemote (DownloadVCReq) returns (DownloadVCResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/did/downloadVCRemote"
      body: "*"
    };
  }
}

// -- proposal --
message SubmitProposalRequest {
  int32           proposal_type = 1;            //1:增加 2:踢出 3:主动退出
  string          proposal_url = 2;
  string          candidate_address = 3;
  string          candidate_service_url = 4;
}

message SubmitProposalResponse {
  int32           status = 1;                      // 响应码
  string          msg = 2;                         // 错误信息
  string          proposalId = 3;
  TxInfo tx_info = 4;
}

message WithdrawProposalRequest {
  string          proposal_id = 1;
}

message WithdrawProposalResponse {
  int32           status = 1;                      // 响应码
  string          msg = 2;                         // 错误信息
  bool            result = 3;
  TxInfo tx_info = 4;
}

message VoteProposalRequest {
  string          proposal_id = 1;
}

message VoteProposalResponse {
  int32           status = 1;                      // 响应码
  string          msg = 2;                         // 错误信息
  bool            result = 3;
  TxInfo tx_info = 4;
}

message EffectProposalRequest {
  string          proposal_id = 1;
}

message EffectProposalResponse {
  int32           status = 1;                      // 响应码
  string          msg = 2;                         // 错误信息
  bool            result = 3;
  TxInfo tx_info = 4;
}

service ProposalService {
  rpc SubmitProposal(SubmitProposalRequest) returns (SubmitProposalResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/proposal/submitProposal"
      body: "*"
    };
  }

  rpc WithdrawProposal(WithdrawProposalRequest) returns (WithdrawProposalResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/proposal/withdrawProposal"
      body: "*"
    };
  }


  rpc VoteProposal(VoteProposalRequest) returns (VoteProposalResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/proposal/voteProposal"
      body: "*"
    };
  }

  rpc EffectProposal(EffectProposalRequest) returns (EffectProposalResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/proposal/effectProposal"
      body: "*"
    };
  }
}