syntax = "proto3";

option go_package = "github.com/datumtechs/datum-network-carrier/pb/carrier/api";
//一个proto文件会生成一个最外部类，里面会包含很多子类，指定这个proto文件生成的类所属的包名
option java_package = "com.platon.datum.admin.grpc.carrier.api";
//这个proto文件生成会为其中的所有message生成一个最外部类，此配置设置该类类名，如果没有指定此值，则类名为proto文件名的驼峰命名方法
option java_outer_classname = "ProposalRpcApi";

package carrier.api;

import "google/api/annotations.proto";
import "carrier/api/transaction_info.proto";

message SubmitProposalRequest {
  int32           proposal_type = 1;            //1:增加 2:踢出 3:主动退出
  string          proposal_url = 2;
  string          candidate_address = 3;
  string          candidate_service_url = 4;
}

message SubmitProposalResponse {
  int32           status = 1;                      // 响应码
  string          msg = 2;                         // 错误信息
  string          proposalId = 3;
  carrier.api.TransactionInfo transaction_Info = 4;
}

message WithdrawProposalRequest {
  string          proposal_id = 1;
}

message WithdrawProposalResponse {
  int32           status = 1;                      // 响应码
  string          msg = 2;                         // 错误信息
  bool            result = 3;
  carrier.api.TransactionInfo transaction_Info = 4;
}

message VoteProposalRequest {
  string          proposal_id = 1;
}

message VoteProposalResponse {
  int32           status = 1;                      // 响应码
  string          msg = 2;                         // 错误信息
  bool            result = 3;
  carrier.api.TransactionInfo transaction_Info = 4;
}

message EffectProposalRequest {
  string          proposal_id = 1;
}

message EffectProposalResponse {
  int32           status = 1;                      // 响应码
  string          msg = 2;                         // 错误信息
  bool            result = 3;
  carrier.api.TransactionInfo transaction_Info = 4;
}

service ProposalService {
  rpc SubmitProposal(SubmitProposalRequest) returns (SubmitProposalResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/proposal/submitProposal"
      body: "*"
    };
  }

  rpc WithdrawProposal(WithdrawProposalRequest) returns (WithdrawProposalResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/proposal/withdrawProposal"
      body: "*"
    };
  }


  rpc VoteProposal(VoteProposalRequest) returns (VoteProposalResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/proposal/voteProposal"
      body: "*"
    };
  }

  rpc EffectProposal(EffectProposalRequest) returns (EffectProposalResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/proposal/effectProposal"
      body: "*"
    };
  }
}