<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.rosettanet.admin.dao.TbTaskMapper">
  <resultMap id="BaseResultMap" type="com.platon.rosettanet.admin.dao.entity.TbTask">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="task_Id" jdbcType="VARCHAR" property="taskId" />
    <result column="task_Name" jdbcType="VARCHAR" property="taskName" />
    <result column="owner_Name" jdbcType="VARCHAR" property="ownerName" />
    <result column="owner_Identity" jdbcType="VARCHAR" property="ownerIdentity" />
    <result column="create_At" jdbcType="TIMESTAMP" property="createAt" />
    <result column="start_At" jdbcType="TIMESTAMP" property="startAt" />
    <result column="auth_At" jdbcType="TIMESTAMP" property="authAt" />
    <result column="auth_Status" jdbcType="VARCHAR" property="authStatus" />
    <result column="end_At" jdbcType="TIMESTAMP" property="endAt" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="duration" jdbcType="TIMESTAMP" property="duration" />
    <result column="cost_Processor" jdbcType="INTEGER" property="costProcessor" />
    <result column="cost_Mem" jdbcType="BIGINT" property="costMem" />
    <result column="cost_Bandwidth" jdbcType="BIGINT" property="costBandwidth" />
    <result column="alog_Supplier_Identity" jdbcType="VARCHAR" property="alogSupplierIdentity" />
    <result column="alog_Supplier_Name" jdbcType="VARCHAR" property="alogSupplierName" />
    <result column="seen" jdbcType="CHAR" property="seen" />
    <result column="create_Time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_Update_Time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, task_Id, task_Name, owner_Name, owner_Identity, create_At, start_At, auth_At, 
    auth_Status, end_At, state, duration, cost_Processor, cost_Mem, cost_Bandwidth, alog_Supplier_Identity, 
    alog_Supplier_Name, seen, create_Time, last_Update_Time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.platon.rosettanet.admin.dao.entity.TbTask">
    insert into tb_task (id, task_Id, task_Name, 
      owner_Name, owner_Identity, create_At, 
      start_At, auth_At, auth_Status, 
      end_At, state, duration, 
      cost_Processor, cost_Mem, cost_Bandwidth, 
      alog_Supplier_Identity, alog_Supplier_Name, 
      seen, create_Time, last_Update_Time
      )
    values (#{id,jdbcType=INTEGER}, #{taskId,jdbcType=VARCHAR}, #{taskName,jdbcType=VARCHAR}, 
      #{ownerName,jdbcType=VARCHAR}, #{ownerIdentity,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, 
      #{startAt,jdbcType=TIMESTAMP}, #{authAt,jdbcType=TIMESTAMP}, #{authStatus,jdbcType=VARCHAR}, 
      #{endAt,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR}, #{duration,jdbcType=TIMESTAMP}, 
      #{costProcessor,jdbcType=INTEGER}, #{costMem,jdbcType=BIGINT}, #{costBandwidth,jdbcType=BIGINT}, 
      #{alogSupplierIdentity,jdbcType=VARCHAR}, #{alogSupplierName,jdbcType=VARCHAR}, 
      #{seen,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.platon.rosettanet.admin.dao.entity.TbTask">
    insert into tb_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskId != null">
        task_Id,
      </if>
      <if test="taskName != null">
        task_Name,
      </if>
      <if test="ownerName != null">
        owner_Name,
      </if>
      <if test="ownerIdentity != null">
        owner_Identity,
      </if>
      <if test="createAt != null">
        create_At,
      </if>
      <if test="startAt != null">
        start_At,
      </if>
      <if test="authAt != null">
        auth_At,
      </if>
      <if test="authStatus != null">
        auth_Status,
      </if>
      <if test="endAt != null">
        end_At,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="costProcessor != null">
        cost_Processor,
      </if>
      <if test="costMem != null">
        cost_Mem,
      </if>
      <if test="costBandwidth != null">
        cost_Bandwidth,
      </if>
      <if test="alogSupplierIdentity != null">
        alog_Supplier_Identity,
      </if>
      <if test="alogSupplierName != null">
        alog_Supplier_Name,
      </if>
      <if test="seen != null">
        seen,
      </if>
      <if test="createTime != null">
        create_Time,
      </if>
      <if test="lastUpdateTime != null">
        last_Update_Time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="ownerName != null">
        #{ownerName,jdbcType=VARCHAR},
      </if>
      <if test="ownerIdentity != null">
        #{ownerIdentity,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="startAt != null">
        #{startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="authAt != null">
        #{authAt,jdbcType=TIMESTAMP},
      </if>
      <if test="authStatus != null">
        #{authStatus,jdbcType=VARCHAR},
      </if>
      <if test="endAt != null">
        #{endAt,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=TIMESTAMP},
      </if>
      <if test="costProcessor != null">
        #{costProcessor,jdbcType=INTEGER},
      </if>
      <if test="costMem != null">
        #{costMem,jdbcType=BIGINT},
      </if>
      <if test="costBandwidth != null">
        #{costBandwidth,jdbcType=BIGINT},
      </if>
      <if test="alogSupplierIdentity != null">
        #{alogSupplierIdentity,jdbcType=VARCHAR},
      </if>
      <if test="alogSupplierName != null">
        #{alogSupplierName,jdbcType=VARCHAR},
      </if>
      <if test="seen != null">
        #{seen,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.rosettanet.admin.dao.entity.TbTask">
    update tb_task
    <set>
      <if test="taskId != null">
        task_Id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        task_Name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="ownerName != null">
        owner_Name = #{ownerName,jdbcType=VARCHAR},
      </if>
      <if test="ownerIdentity != null">
        owner_Identity = #{ownerIdentity,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_At = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="startAt != null">
        start_At = #{startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="authAt != null">
        auth_At = #{authAt,jdbcType=TIMESTAMP},
      </if>
      <if test="authStatus != null">
        auth_Status = #{authStatus,jdbcType=VARCHAR},
      </if>
      <if test="endAt != null">
        end_At = #{endAt,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=TIMESTAMP},
      </if>
      <if test="costProcessor != null">
        cost_Processor = #{costProcessor,jdbcType=INTEGER},
      </if>
      <if test="costMem != null">
        cost_Mem = #{costMem,jdbcType=BIGINT},
      </if>
      <if test="costBandwidth != null">
        cost_Bandwidth = #{costBandwidth,jdbcType=BIGINT},
      </if>
      <if test="alogSupplierIdentity != null">
        alog_Supplier_Identity = #{alogSupplierIdentity,jdbcType=VARCHAR},
      </if>
      <if test="alogSupplierName != null">
        alog_Supplier_Name = #{alogSupplierName,jdbcType=VARCHAR},
      </if>
      <if test="seen != null">
        seen = #{seen,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_Time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        last_Update_Time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.rosettanet.admin.dao.entity.TbTask">
    update tb_task
    set task_Id = #{taskId,jdbcType=VARCHAR},
      task_Name = #{taskName,jdbcType=VARCHAR},
      owner_Name = #{ownerName,jdbcType=VARCHAR},
      owner_Identity = #{ownerIdentity,jdbcType=VARCHAR},
      create_At = #{createAt,jdbcType=TIMESTAMP},
      start_At = #{startAt,jdbcType=TIMESTAMP},
      auth_At = #{authAt,jdbcType=TIMESTAMP},
      auth_Status = #{authStatus,jdbcType=VARCHAR},
      end_At = #{endAt,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=TIMESTAMP},
      cost_Processor = #{costProcessor,jdbcType=INTEGER},
      cost_Mem = #{costMem,jdbcType=BIGINT},
      cost_Bandwidth = #{costBandwidth,jdbcType=BIGINT},
      alog_Supplier_Identity = #{alogSupplierIdentity,jdbcType=VARCHAR},
      alog_Supplier_Name = #{alogSupplierName,jdbcType=VARCHAR},
      seen = #{seen,jdbcType=CHAR},
      create_Time = #{createTime,jdbcType=TIMESTAMP},
      last_Update_Time = #{lastUpdateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>