<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.datum.admin.dao.DataNodeMapper">
    <resultMap id="BaseResultMap" type="com.platon.datum.admin.dao.entity.DataNode">
        <id column="node_id" jdbcType="VARCHAR" property="nodeId"/>
        <result column="node_name" jdbcType="VARCHAR" property="nodeName"/>
        <result column="internal_IP" jdbcType="VARCHAR" property="internalIp"/>
        <result column="internal_Port" jdbcType="INTEGER" property="internalPort"/>
        <result column="external_IP" jdbcType="VARCHAR" property="externalIp"/>
        <result column="external_Port" jdbcType="INTEGER" property="externalPort"/>
        <result column="conn_Status" jdbcType="INTEGER" property="connStatus"/>
        <result column="conn_message" jdbcType="VARCHAR" property="connMessage"/>
        <result column="conn_Time" jdbcType="TIMESTAMP" property="connTime"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="rec_create_time" jdbcType="TIMESTAMP" property="recCreateTime"/>
        <result column="rec_update_time" jdbcType="TIMESTAMP" property="recUpdateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        node_id,
        node_name,
        internal_IP,
        internal_Port,
        external_IP,
        external_Port,
        conn_Status,
        conn_message,
        conn_Time,
        status,
        remarks,
        rec_create_time,
        rec_update_time
    </sql>

    <select id="listNode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from local_data_node
        <where>
            <if test="keyword != null and keyword != ''">
                node_name like CONCAT('%', #{keyword}, '%')
            </if>
        </where>
        ORDER BY CASE conn_status WHEN 'enabled' THEN 1 ELSE 0 END
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from local_data_node
        where node_id = #{nodeId,jdbcType=VARCHAR}
    </select>

    <select id="findLocalDataNodeByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from local_data_node
        where node_name = #{nodeName,jdbcType=VARCHAR}
    </select>

    <select id="selectByProperties" parameterType="com.platon.datum.admin.dao.entity.DataNode"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from local_data_node
        where internal_IP = #{internalIp,jdbcType=VARCHAR}
          and internal_Port = #{internalPort,jdbcType=INTEGER}
          and external_IP = #{externalIp,jdbcType=VARCHAR}
          and external_Port = #{externalPort,jdbcType=INTEGER}
        limit 1
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from local_data_node
        where node_id = #{nodeId,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.platon.datum.admin.dao.entity.DataNode">
        insert into local_data_node (node_id,
                                     node_name, internal_IP, internal_Port,
                                     external_IP, external_Port, conn_Status,
                                     conn_message, conn_Time, status,
                                     remarks)
        values (#{nodeId,jdbcType=VARCHAR},
                #{nodeName,jdbcType=VARCHAR}, #{internalIp,jdbcType=VARCHAR}, #{internalPort,jdbcType=INTEGER},
                #{externalIp,jdbcType=VARCHAR}, #{externalPort,jdbcType=INTEGER}, #{connStatus,jdbcType=INTEGER},
                #{connMessage,jdbcType=VARCHAR}, #{connTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR},
                #{remarks,jdbcType=VARCHAR})
    </insert>

    <update id="update" parameterType="com.platon.datum.admin.dao.entity.DataNode">
        update local_data_node
        set internal_IP   = #{internalIp,jdbcType=VARCHAR},
            internal_Port = #{internalPort,jdbcType=INTEGER},
            external_IP   = #{externalIp,jdbcType=VARCHAR},
            external_Port = #{externalPort,jdbcType=INTEGER},
            conn_Status   = #{connStatus,jdbcType=INTEGER}
        where node_Id = #{nodeId,jdbcType=VARCHAR}
    </update>

    <update id="updateLocalDataNodeName">
        update local_data_node
        set node_name = #{nodeName,jdbcType=VARCHAR}
        where node_Id = #{nodeId,jdbcType=VARCHAR}
    </update>

    <update id="initNewDataNodeBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            INSERT INTO local_data_node (node_id,
                                         node_name,
                                         internal_ip,
                                         internal_port,
                                         external_ip,
                                         external_port,
                                         conn_status)
            VALUES (#{item.nodeId, jdbcType=VARCHAR},
                    #{item.nodeName, jdbcType=VARCHAR},
                    #{item.internalIp,jdbcType=VARCHAR},
                    #{item.internalPort,jdbcType=INTEGER},
                    #{item.externalIp,jdbcType=VARCHAR},
                    #{item.externalPort,jdbcType=INTEGER},
                    #{item.connStatus,jdbcType=INTEGER})
            ON DUPLICATE KEY
                UPDATE internal_ip   = #{item.internalIp,jdbcType=VARCHAR},
                       internal_port = #{item.internalPort,jdbcType=INTEGER},
                       external_ip   = #{item.externalIp,jdbcType=VARCHAR},
                       external_port = #{item.externalPort,jdbcType=INTEGER},
                       conn_status   = #{item.connStatus,jdbcType=INTEGER}
        </foreach>
    </update>
</mapper>