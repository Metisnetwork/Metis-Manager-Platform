<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.datum.admin.dao.GlobalOrgMapper">
    <resultMap id="BaseResultMap" type="com.platon.datum.admin.dao.entity.GlobalOrg">
        <!--@mbg.generated-->
        <!--@Table global_org-->
        <id column="identity_id" jdbcType="VARCHAR" property="identityId"/>
        <result column="identity_type" jdbcType="TINYINT" property="identityType"/>
        <result column="node_id" jdbcType="VARCHAR" property="nodeId"/>
        <result column="node_name" jdbcType="VARCHAR" property="nodeName"/>
        <result column="data_id" jdbcType="VARCHAR" property="dataId"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="image_url" jdbcType="VARCHAR" property="imageUrl"/>
        <result column="details" jdbcType="VARCHAR" property="details"/>
        <result column="update_at" jdbcType="TIMESTAMP" property="recUpdateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        identity_id, identity_type, node_id, node_name, data_id, `status`, image_url, details,
        update_at
    </sql>

    <select id="selectByIdentityId" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from global_org
        where identity_id = #{identityId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByIdentityId" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete
        from global_org
        where identity_id = #{identityId,jdbcType=VARCHAR}
    </delete>

    <update id="insertOrUpdate">
        <foreach collection="identityList" item="org" separator=";">
            insert into global_org (identity_id, identity_type, node_id,
                                    node_name, `status`,
                                    image_url, details, update_at)
            values (#{org.identityId,jdbcType=VARCHAR}, #{org.identityType,jdbcType=TINYINT},
                    #{org.nodeId,jdbcType=VARCHAR},
                    #{org.nodeName,jdbcType=VARCHAR}, #{org.status,jdbcType=TINYINT},
                    #{org.imageUrl,jdbcType=VARCHAR}, #{org.details,jdbcType=VARCHAR},
                    #{org.recUpdateTime,jdbcType=TIMESTAMP})
            on duplicate key update identity_type = #{org.identityType,jdbcType=TINYINT},
                                    node_id       = #{org.nodeId,jdbcType=VARCHAR},
                                    node_name     = #{org.nodeName,jdbcType=VARCHAR},
                                    `status`      = #{org.status,jdbcType=TINYINT},
                                    image_url     = #{org.imageUrl,jdbcType=VARCHAR},
                                    details       = #{org.details,jdbcType=VARCHAR},
                                    update_at     = #{org.recUpdateTime,jdbcType=TIMESTAMP}
        </foreach>
    </update>

    <select id="selectNominateMemberList" resultMap="BaseResultMap">
        select *
        from global_org
        left join authority a on global_org.identity_id = a.identity_id
        where
        a.identity_id is null
        <if test="keyword != null and keyword != ''">
            and global_org.node_name like CONCAT('%', #{keyword}, '%')
        </if>
    </select>
</mapper>