<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.datum.admin.dao.AttributeDataTokenInventoryMapper">
    <resultMap id="BaseResultMap" type="com.platon.datum.admin.dao.entity.AttributeDataTokenInventory">
        <!--@mbg.generated-->
        <!--@Table attribute_data_token_inventory-->
        <result column="data_token_address" jdbcType="VARCHAR" property="dataTokenAddress"/>
        <result column="token_id" jdbcType="VARCHAR" property="tokenId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="image_url" jdbcType="VARCHAR" property="imageUrl"/>
        <result column="desc" jdbcType="VARCHAR" property="desc"/>
        <result column="end_time" jdbcType="VARCHAR" property="endTime"/>
        <result column="usage" jdbcType="INTEGER" property="usage"/>
        <result column="owner" jdbcType="VARCHAR" property="owner"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        data_token_address, token_id, `name`, image_url, `desc`, end_time,
        `usage`,`owner`
    </sql>

    <resultMap id="BaseResultMap_With_MetaDataInfo" type="com.platon.datum.admin.dao.entity.AttributeDataTokenInventory"
               extends="BaseResultMap">
        <result column="data_token_name" property="dynamicFields.dataTokenName" jdbcType="VARCHAR"/>
        <result column="meta_data_id" property="dynamicFields.metaDataId" jdbcType="VARCHAR"/>
        <result column="meta_data_name" property="dynamicFields.metaDataName" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="selectByDataTokenAddressAndKeyword" resultMap="BaseResultMap_With_MetaDataInfo">
        select adti.*,
               adt.name          as data_token_name,
               md.meta_data_id   as meta_data_id,
               md.meta_data_name as meta_data_name
        from (select
        <include refid="Base_Column_List"/>
        from attribute_data_token_inventory
        <where>
            data_token_address = #{dataTokenAddress}
            <if test="keyword != null and keyword != ''">
                and (name like CONCAT('%', #{keyword}, '%') or token_id like CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
        ) adti
            left join attribute_data_token adt on adt.address = adti.data_token_address
            left join meta_data md on adt.`meta_data_db_id` = md.`id`
        ORDER BY token_id + 0 DESC
    </select>

    <select id="selectByDataTokenAddressAndTokenId" resultMap="BaseResultMap_With_MetaDataInfo">
        select adti.*,
               adt.name          as data_token_name,
               md.meta_data_id   as meta_data_id,
               md.meta_data_name as meta_data_name
        from (select
        <include refid="Base_Column_List"/>
        from attribute_data_token_inventory
        <where>
            data_token_address = #{dataTokenAddress}
              and token_id = #{tokenId}
        </where>) adti
                    left join attribute_data_token adt on adt.address = adti.data_token_address
                    left join meta_data md on adt.`meta_data_db_id` = md.`id`
    </select>

    <select id="selectMaxTokenId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from attribute_data_token_inventory
        where data_token_address = #{tokenAddress}
        order by token_id desc
        limit 1
    </select>

    <update id="replace">
        <!--@mbg.generated-->
        insert into attribute_data_token_inventory
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dataTokenAddress != null">
                data_token_address,
            </if>
            <if test="tokenId != null">
                token_id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="imageUrl != null">
                image_url,
            </if>
            <if test="desc != null">
                `desc`,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="usage != null">
                `usage`,
            </if>
            <if test="owner != null">
                `owner`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dataTokenAddress != null">
                #{dataTokenAddress,jdbcType=VARCHAR},
            </if>
            <if test="tokenId != null">
                #{tokenId,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="imageUrl != null">
                #{imageUrl,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                #{desc,jdbcType=VARCHAR},
            </if>
            <if test="endTime != null">
                #{endTime},
            </if>
            <if test="usage != null">
                #{usage,jdbcType=INTEGER},
            </if>
            <if test="owner != null">
                #{owner},
            </if>
        </trim>
        ON DUPLICATE KEY
        update
        <trim suffixOverrides=",">
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="imageUrl != null">
                image_url = #{imageUrl,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                `desc` = #{desc,jdbcType=VARCHAR},
            </if>
            <if test="endTime != null">
                end_time = #{endTime},
            </if>
            <if test="usage != null">
                `usage` = #{usage,jdbcType=INTEGER},
            </if>
            <if test="owner != null">
                `owner` = #{owner,jdbcType=VARCHAR},
            </if>
        </trim>
    </update>
</mapper>