<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.metis.admin.dao.StoreCalculateResultMapper">
  <resultMap id="BaseResultMap" type="com.platon.metis.admin.dao.entity.StoreCalculateResult">
    <result column="time_interval" jdbcType="VARCHAR" property="timeInterval" />
    <result column="store_type" jdbcType="VARCHAR" property="storeType" />
    <result column="reside_time" jdbcType="VARCHAR" property="resideTime" />
    <result column="calculate_result" jdbcType="BIGINT" property="calculateResult" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    time_interval,
    store_type,
    reside_time,
    calculate_result,
    status,
    create_time,
    update_time
  </sql>

  <!-- 插入计算结果 -->
  <insert id="saveMyPublishDataMonth" parameterType="com.platon.metis.admin.dao.entity.StoreCalculateResult">
    insert into store_calculate_result (
        time_interval,
        store_type,
        reside_time,
        calculate_result,
        status,
        create_time,
        update_time)
    values (
        #{timeInterval, jdbcType=VARCHAR},
        #{storeType, jdbcType=VARCHAR},
        #{resideTime, jdbcType=VARCHAR},
        #{calculateResult, jdbcType=BIGINT},
        #{status, jdbcType=INTEGER},
        #{create_time, jdbcType=TIMESTAMP},
        #{create_time, jdbcType=TIMESTAMP})
  </insert>

  <!-- 查询我发布的上月总数据 -->
  <select id="queryMyMonthPublishData" resultType="java.lang.Long">
    select
        IFNULL(sum(a.size), 0) as totalSize,
    from
        local_data_file a, (
            select
                DATE_FORMAT(publish_time,'%Y-%m') as `month`,
                data_file_id as data_file_id
            from
                local_meta_data
            where 1=1
              and (status = 2 or status = 3)
              and DATE_FORMAT(publish_time,'%Y-%m') = DATE_FORMAT((curdate() - interval 1 month),'%Y-%m')
              group by data_file_id) b
    where 1=1
        and a.id = b.data_file_id
  </select>

</mapper>