<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.metis.admin.dao.LocalDataAuthMapper">
  <resultMap id="BaseResultMap" type="com.platon.metis.admin.dao.entity.LocalDataAuth">
    <id column="auth_id" jdbcType="VARCHAR" property="authId" />
    <result column="meta_data_id" jdbcType="VARCHAR" property="metaDataId" />
    <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="auth_type" jdbcType="BIT" property="authType" />
    <result column="auth_value_amount" jdbcType="INTEGER" property="authValueAmount" />
    <result column="auth_value_start_at" jdbcType="TIMESTAMP" property="authValueStartAt" />
    <result column="auth_value_end_at" jdbcType="TIMESTAMP" property="authValueEndAt" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="auth_at" jdbcType="TIMESTAMP" property="authAt" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="identity_name" jdbcType="VARCHAR" property="identityName" />
    <result column="identity_id" jdbcType="VARCHAR" property="identityId" />
    <result column="identity_node_id" jdbcType="VARCHAR" property="identityNodeId" />
    <result column="rec_create_time" jdbcType="TIMESTAMP" property="recCreateTime" />
    <result column="rec_update_time" jdbcType="TIMESTAMP" property="recUpdateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    auth_id, meta_data_id, apply_user, user_type, auth_type, auth_value_amount,
    auth_value_start_at, auth_value_end_at, create_at, auth_at, status,
    identity_name, identity_id, identity_node_id, rec_create_time, rec_update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from local_data_auth
    where auth_id = #{authId,jdbcType=VARCHAR}
  </select>


  <resultMap id="BaseResultMap_With_FileName" type="com.platon.metis.admin.dao.entity.LocalDataAuth" extends="BaseResultMap">
    <result column="resource_name" property="dynamicFields.resourceName" jdbcType="VARCHAR"/>
  </resultMap>


  <select id="selectDataAuthList" resultMap="BaseResultMap_With_FileName">
    SELECT
    lda.*, lma.meta_data_name AS resource_name
    FROM
    local_data_auth AS lda
    LEFT JOIN local_meta_data AS lma ON lda.meta_data_id = lma.meta_data_id
     <where>
         <if test="status != null and status == 1">
           and lda.status = 0
         </if>
         <if test="status != null and status == 2">
           and lda.status in (1,2)
         </if>
         <if test="keyword != null and keyword != ''">
           and (lma.meta_data_name like concat('%', #{keyword, jdbcType=VARCHAR}, '%')
         </if>
     </where>
     ORDER BY lda.create_at DESC
  </select>

  <select id="listAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from local_data_auth
  </select>

  <select id="selectFinishAuthCount" resultType="java.lang.Integer">
       SELECT
            COUNT(lda.auth_id)
        FROM
            local_data_auth AS lda
        WHERE
            lda.`status` IN (1, 2)
  </select>


  <select id="selectUnfinishAuthCount" resultType="java.lang.Integer">
        SELECT
            COUNT(lda.auth_id)
        FROM
            local_data_auth AS lda
        WHERE
            lda.`status` IN (0)
  </select>

  <select id="selectDataAuthByStatusWithAuthFinish" resultType="java.lang.String">
    SELECT
       lda.auth_id
    FROM
       local_data_auth AS lda
    WHERE
       lda.`status` = 2
    OR (
        lda.auth_type = 1
        AND lda.`status` = 1
        AND UNIX_TIMESTAMP(lda.auth_value_start_at) <![CDATA[<= ]]> UNIX_TIMESTAMP(NOW())
        AND UNIX_TIMESTAMP(lda.auth_value_end_at) <![CDATA[>= ]]> UNIX_TIMESTAMP(NOW())
    )
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from local_data_auth
    where auth_id = #{autId,jdbcType=VARCHAR}
  </delete>


  <insert id="insert" parameterType="com.platon.metis.admin.dao.entity.LocalDataAuth">
    insert into local_data_auth (auth_id, meta_data_id, apply_user,
      user_type, auth_type, auth_value_amount,
      auth_value_start_at, auth_value_end_at, create_at, 
      auth_at, status,
      identity_name, identity_id, identity_node_id)
    values (#{authId,jdbcType=VARCHAR}, #{metaDataId,jdbcType=VARCHAR}, #{applyUser,jdbcType=VARCHAR},
      #{userType,jdbcType=INTEGER}, #{authType,jdbcType=BIT}, #{authValueAmount,jdbcType=INTEGER},
      #{authValueStartAt,jdbcType=TIMESTAMP}, #{authValueEndAt,jdbcType=TIMESTAMP}, #{createAt,jdbcType=TIMESTAMP}, 
      #{authAt,jdbcType=TIMESTAMP}, #{status,jdbcType=BIT},
      #{identityName,jdbcType=VARCHAR}, #{identityId,jdbcType=VARCHAR}, #{identityNodeId,jdbcType=VARCHAR})
  </insert>


  <insert id="insertBatch" parameterType="java.util.List">
    INSERT INTO local_data_auth (auth_id, meta_data_id, apply_user,
    user_type, auth_type, auth_value_amount,
    auth_value_start_at, auth_value_end_at, create_at,
    auth_at, status,
    identity_name, identity_id, identity_node_id)
    values
    <foreach collection ="list" item="item" index="index" separator=",">
      (#{item.authId,jdbcType=VARCHAR}, #{item.metaDataId,jdbcType=VARCHAR}, #{item.applyUser,jdbcType=VARCHAR},
      #{item.userType,jdbcType=INTEGER}, #{item.authType,jdbcType=BIT}, #{item.authValueAmount,jdbcType=INTEGER},
      #{item.authValueStartAt,jdbcType=TIMESTAMP}, #{item.authValueEndAt,jdbcType=TIMESTAMP},
      #{item.createAt,jdbcType=TIMESTAMP},
      #{item.authAt,jdbcType=TIMESTAMP}, #{item.status,jdbcType=BIT},
      #{item.identityName,jdbcType=VARCHAR}, #{item.identityId,jdbcType=VARCHAR},
      #{item.identityNodeId,jdbcType=VARCHAR})
    </foreach>
  </insert>





  <insert id="insertSelective" parameterType="com.platon.metis.admin.dao.entity.LocalDataAuth">
    insert into local_data_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        auth_id,
      </if>
      <if test="metaDataId != null">
        meta_data_id,
      </if>
      <if test="applyUser != null">
        apply_user,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="authType != null">
        auth_type,
      </if>
      <if test="authValueAmount != null">
        auth_value_amount,
      </if>
      <if test="authValueStartAt != null">
        auth_value_start_at,
      </if>
      <if test="authValueEndAt != null">
        auth_value_end_at,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="authAt != null">
        auth_at,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="identityName != null">
        identity_name,
      </if>
      <if test="identityId != null">
        identity_id,
      </if>
      <if test="identityNodeId != null">
        identity_node_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        #{authId,jdbcType=VARCHAR},
      </if>
      <if test="metaDataId != null">
        #{metaDataId,jdbcType=VARCHAR},
      </if>
      <if test="applyUser != null">
        #{applyUser,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="authType != null">
        #{authType,jdbcType=BIT},
      </if>
      <if test="authValueAmount != null">
        #{authValueAmount,jdbcType=INTEGER},
      </if>
      <if test="authValueStartAt != null">
        #{authValueStartAt,jdbcType=TIMESTAMP},
      </if>
      <if test="authValueEndAt != null">
        #{authValueEndAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="authAt != null">
        #{authAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="identityName != null">
        #{identityName,jdbcType=VARCHAR},
      </if>
      <if test="identityId != null">
        #{identityId,jdbcType=VARCHAR},
      </if>
      <if test="identityNodeId != null">
        #{identityNodeId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="com.platon.metis.admin.dao.entity.LocalDataAuth">
    update local_data_auth
    <set>
      <if test="metaDataId != null">
        meta_data_id = #{metaDataId,jdbcType=VARCHAR},
      </if>
      <if test="applyUser != null">
        apply_user = #{applyUser,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="authType != null">
        auth_type = #{authType,jdbcType=BIT},
      </if>
      <if test="authValueAmount != null">
        auth_value_amount = #{authValueAmount,jdbcType=INTEGER},
      </if>
      <if test="authValueStartAt != null">
        auth_value_start_at = #{authValueStartAt,jdbcType=TIMESTAMP},
      </if>
      <if test="authValueEndAt != null">
        auth_value_end_at = #{authValueEndAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="authAt != null">
        auth_at = #{authAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="identityName != null">
        identity_name = #{identityName,jdbcType=VARCHAR},
      </if>
      <if test="identityId != null">
        identity_id = #{identityId,jdbcType=VARCHAR},
      </if>
      <if test="identityNodeId != null">
        identity_node_id = #{identityNodeId,jdbcType=VARCHAR},
      </if>
     </set>
    where auth_id = #{authId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.metis.admin.dao.entity.LocalDataAuth">
    update local_data_auth
    set
      meta_data_id = #{metaDataId,jdbcType=VARCHAR},
      apply_user = #{applyUser,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      auth_type = #{authType,jdbcType=BIT},
      auth_value_amount = #{authValueAmount,jdbcType=INTEGER},
      auth_value_start_at = #{authValueStartAt,jdbcType=TIMESTAMP},
      auth_value_end_at = #{authValueEndAt,jdbcType=TIMESTAMP},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      auth_at = #{authAt,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT},
      identity_name = #{identityName,jdbcType=VARCHAR},
      identity_id = #{identityId,jdbcType=VARCHAR},
      identity_node_id = #{identityNodeId,jdbcType=VARCHAR}
    where auth_id = #{authId,jdbcType=VARCHAR}
  </update>

  <update id="updateExpireAuthData">
    update local_data_auth
    set status = 2,auth_at = current_timestamp()
    where auth_type = 1 and status = 0 and auth_value_end_at &lt; current_timestamp();
  </update>
</mapper>