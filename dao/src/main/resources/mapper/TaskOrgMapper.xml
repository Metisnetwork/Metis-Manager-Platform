<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.metis.admin.dao.TaskOrgMapper">
  <resultMap id="BaseResultMap" type="com.platon.metis.admin.dao.entity.TaskOrg">
    <result column="identity_id" jdbcType="VARCHAR" property="identityId" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
    <result column="carrier_node_id" jdbcType="VARCHAR" property="carrierNodeId" />
  </resultMap>


  <sql id="Base_Column_List">
    identity_id, `org_name`, carrier_node_id
  </sql>


  <select id="selectAllTaskOrg" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from task_org
  </select>


  <resultMap id="BaseResultMap_with_role" type="com.platon.metis.admin.dao.entity.TaskOrg" extends="BaseResultMap">
    <result column="taskSponsor" property="dynamicFields.taskSponsor" jdbcType="BOOLEAN"/>
    <result column="powerProvider" property="dynamicFields.powerProvider" jdbcType="BOOLEAN"/>
    <result column="dataProvider" property="dynamicFields.dataProvider" jdbcType="BOOLEAN"/>
    <result column="resultConsumer" property="dynamicFields.resultConsumer" jdbcType="BOOLEAN"/>
    <result column="algoProvider" property="dynamicFields.algoProvider" jdbcType="BOOLEAN"/>
  </resultMap>
  <select id="findOrgWitRoleByTaskIdAndIdentityId"  resultMap="BaseResultMap_with_role">
    select t1.*, t2.*
    from(
      select o.*
      from task_org o
      where o.identity_id = #{identityId,jdbcType=VARCHAR}
    ) t1, (
      select sum(tmp.taskSponsor) as taskSponsor, sum(tmp.powerProvider) as powerProvider , sum(tmp.dataProvider) as dataProvider, sum(tmp.resultConsumer) as resultConsumer, sum(tmp.algoProvider) as algoProvider
      from (
         select tk.owner_identity_id as identity_id, tk.task_id as task_id, true taskSponsor, false as powerProvider, false as dataProvider, false as resultConsumer, false algoProvider
         from task tk
         WHERE tk.task_id = #{taskId,jdbcType=VARCHAR} and tk.owner_identity_id = #{identityId,jdbcType=VARCHAR}

         union

         select tap.identity_id, tap.task_id, false taskSponsor, false as powerProvider, false as dataProvider, false as resultConsumer, true algoProvider
         from task_algo_provider tap
         WHERE tap.task_id = #{taskId,jdbcType=VARCHAR} and tap.identity_id = #{identityId,jdbcType=VARCHAR}

         union

         select tpp.identity_id, tpp.task_id, false taskSponsor, true as powerProvider, false as dataProvider, false as resultConsumer, false algoProvider
         from task_power_provider tpp
         WHERE tpp.task_id = #{taskId,jdbcType=VARCHAR} and tpp.identity_id = #{identityId,jdbcType=VARCHAR}

         union

         select tdp.identity_id, tdp.task_id, false taskSponsor, false as powerProvider, true as dataProvider, false as resultConsumer, false algoProvider
         from task_data_provider tdp
         WHERE tdp.task_id = #{taskId,jdbcType=VARCHAR} and tdp.identity_id = #{identityId,jdbcType=VARCHAR}

         union

         select DISTINCT trc.consumer_identity_id as identity_id, trc.task_id, false taskSponsor, false as powerProvider, false as dataProvider, true as resultConsumer, false algoProvider
         from task_result_consumer trc
         WHERE trc.task_id = #{taskId,jdbcType=VARCHAR} and trc.consumer_identity_id = #{identityId,jdbcType=VARCHAR}

       ) tmp
    ) t2

    where identity_id = #{identityId,jdbcType=VARCHAR}
  </select>


  <insert id="insertBatch" parameterType="java.util.Set">
    replace into task_org (identity_id, `org_name`, carrier_node_id)
    values
    <foreach collection ="collection" item="item" separator =",">
      (#{item.identityId,jdbcType=VARCHAR},#{item.orgName,jdbcType=VARCHAR},#{item.carrierNodeId,jdbcType=VARCHAR})
    </foreach>
  </insert>





</mapper>