<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.datum.admin.dao.ProposalLogMapper">
    <resultMap id="BaseResultMap" type="com.platon.datum.admin.dao.entity.ProposalLog">
        <!--@mbg.generated-->
        <!--@Table proposal_log-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="block_number" jdbcType="VARCHAR" property="blockNumber"/>
        <result column="tx_hash" jdbcType="VARCHAR" property="txHash"/>
        <result column="log_index" jdbcType="VARCHAR" property="logIndex"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `type`, block_number, tx_hash, log_index, content, create_time, update_time,`status`
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from proposal_log
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete
        from proposal_log
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.platon.datum.admin.dao.entity.ProposalLog"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into proposal_log (`type`, block_number, tx_hash,
                                  log_index, content, create_time,
                                  update_time)
        values (#{type,jdbcType=INTEGER}, #{blockNumber,jdbcType=VARCHAR}, #{txHash,jdbcType=VARCHAR},
                #{logIndex,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.platon.datum.admin.dao.entity.ProposalLog">
        <!--@mbg.generated-->
        update proposal_log
        <set>
            <if test="type != null">
                `type` = #{type,jdbcType=INTEGER},
            </if>
            <if test="blockNumber != null">
                block_number = #{blockNumber,jdbcType=VARCHAR},
            </if>
            <if test="txHash != null">
                tx_hash = #{txHash,jdbcType=VARCHAR},
            </if>
            <if test="logIndex != null">
                log_index = #{logIndex,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from proposal_log
        where `status` = #{status}
    </select>

    <select id="countByBnAndTxHashAndLogIndex" resultType="int">
        select
        <include refid="Base_Column_List"/>
        from proposal_log
        where block_number = #{blockNumber}
          and tx_hash = #{transactionHash}
          and log_index = #{logIndex}
    </select>

    <update id="updateListStatus">
        <foreach collection="proposalLogList" item="log" separator=";">
            update proposal_log
            set `status` = #{log.status}
        </foreach>
    </update>

    <select id="selectLatestOne" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from proposal_log
        order by id desc
        limit 1
    </select>
</mapper>