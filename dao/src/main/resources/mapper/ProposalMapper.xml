<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.datum.admin.dao.ProposalMapper">
    <resultMap id="BaseResultMap" type="com.platon.datum.admin.dao.entity.Proposal">
        <!--@mbg.generated-->
        <!--@Table proposal-->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="submitter" jdbcType="VARCHAR" property="submitter"/>
        <result column="candidate" jdbcType="VARCHAR" property="candidate"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="submission_bn" jdbcType="VARCHAR" property="submissionBn"/>
        <result column="vote_begin_bn" jdbcType="VARCHAR" property="voteBeginBn"/>
        <result column="vote_end_bn" jdbcType="VARCHAR" property="voteEndBn"/>
        <result column="auto_quit_bn" jdbcType="VARCHAR" property="autoQuitBn"/>
        <result column="vote_agree_number" jdbcType="INTEGER" property="voteAgreeNumber"/>
        <result column="authority_number" jdbcType="INTEGER" property="authorityNumber"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="material" jdbcType="VARCHAR" property="material"/>
        <result column="material_desc" jdbcType="VARCHAR" property="materialDesc"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, submitter, candidate, `type`, submission_bn, vote_begin_bn, vote_end_bn,
        auto_quit_bn, vote_agree_number, authority_number, `status`, create_time, update_time,
        material,material_desc,remark
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap_With_OrgInfo">
        select p.*,
               go1.node_name as submitter_name,
               go2.node_name as candidate_name
        from proposal p
                 left join global_org go1 on p.submitter = go1.identity_id
                 left join global_org go2 on p.candidate = go2.identity_id
        where id = #{id}
    </select>

    <update id="updateByPrimaryKeySelective" parameterType="com.platon.datum.admin.dao.entity.Proposal">
        <!--@mbg.generated-->
        update proposal
        <set>
            <if test="submitter != null">
                submitter = #{submitter},
            </if>
            <if test="candidate != null">
                candidate = #{candidate},
            </if>
            <if test="type != null">
                `type` = #{type},
            </if>
            <if test="submissionBn != null">
                submission_bn = #{submissionBn},
            </if>
            <if test="voteBeginBn != null">
                vote_begin_bn = #{voteBeginBn},
            </if>
            <if test="voteEndBn != null">
                vote_end_bn = #{voteEndBn},
            </if>
            <if test="autoQuitBn != null">
                auto_quit_bn = #{autoQuitBn},
            </if>
            <if test="voteAgreeNumber != null">
                vote_agree_number = #{voteAgreeNumber},
            </if>
            <if test="authorityNumber != null">
                authority_number = #{authorityNumber},
            </if>
            <if test="status != null">
                `status` = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="material != null">
                material = #{material},
            </if>
            <if test="materialDesc != null">
                material_desc = #{materialDesc},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </set>
        where id = #{id}
    </update>

    <insert id="insertOrUpdateBatch">
        <foreach collection="proposalList" item="p" separator=";">
            insert into proposal
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="p.id != null">
                    id,
                </if>
                <if test="p.submitter != null">
                    submitter,
                </if>
                <if test="p.candidate != null">
                    candidate,
                </if>
                <if test="p.type != null">
                    `type`,
                </if>
                <if test="p.submissionBn != null">
                    submission_bn,
                </if>
                <if test="p.voteBeginBn != null">
                    vote_begin_bn,
                </if>
                <if test="p.voteEndBn != null">
                    vote_end_bn,
                </if>
                <if test="p.autoQuitBn != null">
                    auto_quit_bn,
                </if>
                <if test="p.voteAgreeNumber != null">
                    vote_agree_number,
                </if>
                <if test="p.authorityNumber != null">
                    authority_number,
                </if>
                <if test="p.status != null">
                    `status`,
                </if>
                <if test="p.createTime != null">
                    create_time,
                </if>
                <if test="p.updateTime != null">
                    update_time,
                </if>
                <if test="p.material != null">
                    material,
                </if>
                <if test="p.materialDesc != null">
                    material_desc,
                </if>
                <if test="p.remark != null">
                    remark,
                </if>
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="p.id != null">
                    #{p.id},
                </if>
                <if test="p.submitter != null">
                    #{p.submitter},
                </if>
                <if test="p.candidate != null">
                    #{p.candidate},
                </if>
                <if test="p.type != null">
                    #{p.type},
                </if>
                <if test="p.submissionBn != null">
                    #{p.submissionBn},
                </if>
                <if test="p.voteBeginBn != null">
                    #{p.voteBeginBn},
                </if>
                <if test="p.voteEndBn != null">
                    #{p.voteEndBn},
                </if>
                <if test="p.autoQuitBn != null">
                    #{p.autoQuitBn},
                </if>
                <if test="p.voteAgreeNumber != null">
                    #{p.voteAgreeNumber},
                </if>
                <if test="p.authorityNumber != null">
                    #{p.authorityNumber},
                </if>
                <if test="p.status != null">
                    #{p.status},
                </if>
                <if test="p.createTime != null">
                    #{p.createTime},
                </if>
                <if test="p.updateTime != null">
                    #{p.updateTime},
                </if>
                <if test="p.material != null">
                    #{p.material},
                </if>
                <if test="p.materialDesc != null">
                    #{p.materialDesc},
                </if>
                <if test="p.remark != null">
                    #{p.remark},
                </if>
            </trim>
            on duplicate key update
            <trim suffixOverrides=",">
                <if test="p.submitter != null">
                    submitter = #{p.submitter},
                </if>
                <if test="p.candidate != null">
                    candidate = #{p.candidate},
                </if>
                <if test="p.type != null">
                    `type` = #{p.type},
                </if>
                <if test="p.submissionBn != null">
                    submission_bn = #{p.submissionBn},
                </if>
                <if test="p.voteBeginBn != null">
                    vote_begin_bn = #{p.voteBeginBn},
                </if>
                <if test="p.voteEndBn != null">
                    vote_end_bn = #{p.voteEndBn},
                </if>
                <if test="p.autoQuitBn != null">
                    auto_quit_bn = #{p.autoQuitBn},
                </if>
                <if test="p.voteAgreeNumber != null">
                    vote_agree_number = #{p.voteAgreeNumber},
                </if>
                <if test="p.authorityNumber != null">
                    authority_number = #{p.authorityNumber},
                </if>
                <if test="p.status != null">
                    `status` = #{p.status},
                </if>
                <if test="p.createTime != null">
                    create_time = #{p.createTime},
                </if>
                <if test="p.updateTime != null">
                    update_time = #{p.updateTime},
                </if>
                <if test="p.material != null">
                    material = #{p.material},
                </if>
                <if test="p.materialDesc != null">
                    material_desc = #{p.materialDesc},
                </if>
                <if test="p.remark != null">
                    remark = #{p.remark},
                </if>
            </trim>
        </foreach>
    </insert>

    <select id="unfinishedProposalCount" resultType="int">
        select count(*)
        from proposal
        where status in (0, 1, 4, 6)
    </select>

    <resultMap id="BaseResultMap_With_OrgInfo" type="com.platon.datum.admin.dao.entity.Proposal"
               extends="BaseResultMap">
        <result column="submitter_name" property="dynamicFields.submitterName" jdbcType="VARCHAR"/>
        <result column="candidate_name" property="dynamicFields.candidateName" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="selectBySubmitter" resultMap="BaseResultMap_With_OrgInfo">
        select p.*,
               go1.node_name as submitter_name,
               go2.node_name as candidate_name
        from proposal p
                 left join global_org go1 on p.submitter = go1.identity_id
                 left join global_org go2 on p.candidate = go2.identity_id
        where submitter = #{localOrgIdentityId}
        <if test="keyword != null and keyword != ''">
            and go2.node_name like concat('%', #{keyword}, '%')
        </if>
    </select>

    <update id="updateStatus">
        update proposal
        set status = #{status}
        where id = #{id}
    </update>

    <select id="countBySubmitter" resultType="int">
        select count(*)
        from proposal
        where submitter = #{identityId}
    </select>

    <select id="selectBySubmitterAndStatus" resultMap="BaseResultMap">
        select p.*
        from proposal p
        where submitter = #{localOrgIdentityId}
          and status in
        <foreach collection="statusList" separator="," open="(" close=")" item="status">
            #{status}
        </foreach>
    </select>

    <select id="selectByStatus" resultMap="BaseResultMap">
        select p.*
        from proposal p
        where status in
        <foreach collection="statusList" separator="," open="(" close=")" item="status">
            #{status}
        </foreach>
    </select>
</mapper>