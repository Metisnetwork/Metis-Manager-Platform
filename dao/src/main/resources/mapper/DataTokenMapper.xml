<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.datum.admin.dao.DataTokenMapper">
    <resultMap id="BaseResultMap" type="com.platon.datum.admin.dao.entity.DataToken">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="symbol" jdbcType="VARCHAR" property="symbol"/>
        <result column="init" jdbcType="VARCHAR" property="init"/>
        <result column="total" jdbcType="VARCHAR" property="total"/>
        <result column="decimal" jdbcType="INTEGER" property="decimal"/>
        <result column="desc" jdbcType="VARCHAR" property="desc"/>
        <result column="owner" jdbcType="VARCHAR" property="owner"/>
        <result column="meta_data_db_id" jdbcType="INTEGER" property="metaDataDbId"/>
        <result column="plaintext_fee" jdbcType="VARCHAR" property="plaintextFee"/>
        <result column="ciphertext_fee" jdbcType="VARCHAR" property="ciphertextFee"/>
        <result column="new_plaintext_fee" jdbcType="VARCHAR" property="newPlaintextFee"/>
        <result column="new_ciphertext_fee" jdbcType="VARCHAR" property="newCiphertextFee"/>
        <result column="publish_nonce" jdbcType="INTEGER" property="publishNonce"/>
        <result column="publish_hash" jdbcType="VARCHAR" property="publishHash"/>
        <result column="up_nonce" jdbcType="INTEGER" property="upNonce"/>
        <result column="up_hash" jdbcType="VARCHAR" property="upHash"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="rec_create_time" jdbcType="TIMESTAMP" property="recCreateTime"/>
        <result column="rec_update_time" jdbcType="TIMESTAMP" property="recUpdateTime"/>
        <result column="fee_update_time" jdbcType="TIMESTAMP" property="feeUpdateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        address,
        `name`,
        symbol,
        init,
        total,
        `decimal`,
        `desc`,
        `owner`,
        meta_data_db_id,
        plaintext_fee,
        ciphertext_fee,
        new_plaintext_fee,
        new_ciphertext_fee,
        `publish_nonce`,
        `publish_hash`,
        up_nonce,
        up_hash,
        `status`,
        rec_create_time,
        rec_update_time,
        fee_update_time
    </sql>

    <resultMap id="BaseResultMap_With_MetaDataInfo" type="com.platon.datum.admin.dao.entity.DataToken"
               extends="BaseResultMap">
        <result column="meta_data_id" property="dynamicFields.metaDataId" jdbcType="VARCHAR"/>
        <result column="meta_data_name" property="dynamicFields.metaDataName" jdbcType="VARCHAR"/>
        <result column="usage" property="dynamicFields.usage" jdbcType="INTEGER" javaType="int"/>
        <result column="data_hash" property="dynamicFields.dataHash" jdbcType="VARCHAR"/>
        <result column="status" property="dynamicFields.status" jdbcType="INTEGER" javaType="int"/>
    </resultMap>

    <select id="selectListByAddress" resultMap="BaseResultMap_With_MetaDataInfo">
        select data_token.*,
               md.meta_data_id   as meta_data_id,
               md.meta_data_name as meta_data_name,
               md.`usage`        as `usage`,
               df.data_hash      as data_hash,
               md.status         as status
        from data_token
                 left join meta_data md on data_token.meta_data_db_id = md.id
                 left join data_file df on md.file_id = df.file_id
        where `owner` = #{address}
        <if test="keyword != null and keyword != ''">
            and name like CONCAT('%', #{keyword}, '%')
        </if>
        order by rec_update_time desc
    </select>

    <insert id="insertAndReturnId" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO data_token (`name`, symbol, init, total, `desc`, `owner`, meta_data_db_id, status, `publish_nonce`,
                                `publish_hash`, plaintext_fee, ciphertext_fee, new_plaintext_fee, new_ciphertext_fee,
                                fee_update_time)
        VALUES (#{name}, #{symbol}, #{init}, #{total}, #{desc}, #{owner}, #{metaDataDbId}, #{status}, #{publishNonce},
                #{publishHash}, #{plaintextFee}, #{ciphertextFee}, #{plaintextFee}, #{ciphertextFee}, #{feeUpdateTime})
        ON DUPLICATE KEY
            UPDATE `name`=#{name},
                   symbol=#{symbol},
                   init=#{init},
                   total=#{total},
                   `desc`=#{desc},
                   owner=#{owner},
                   status=#{status},
                   `publish_nonce`=#{publishNonce},
                   `publish_hash`=#{publishHash},
                   plaintext_fee=#{plaintextFee},
                   ciphertext_fee=#{ciphertextFee},
                   new_plaintext_fee=#{plaintextFee},
                   new_ciphertext_fee=#{ciphertextFee},
                   fee_update_time=#{feeUpdateTime}
    </insert>

    <update id="updatePricingStatus">
        update data_token
        set up_nonce = #{upNonce},
            up_hash  = #{upHash},
            status   = #{status}
        where id = #{id}
    </update>

    <update id="updateStatus">
        update data_token
        set status = #{status}
        where id = #{id}
    </update>

    <update id="updateStatusByCurrentUser">
        update data_token
        set status = #{status}
        where id = #{id}
    </update>

    <select id="selectById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from data_token
        where id = #{id}
    </select>

    <select id="selectListByStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from data_token
        where status = #{status}
    </select>

    <update id="updateTokenAddress">
        update data_token
        set address = #{tokenAddress}
        where id = #{id}
    </update>

    <select id="selectByMetaDataId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from data_token
        where meta_data_db_id = #{metaDataDbId}
    </select>

    <select id="selectPublishedByMetaDataId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from data_token
        where meta_data_db_id = #{metaDataDbId}
          and status in (3, 4, 5, 6, 7, 8, 9)
    </select>

    <update id="updateFeeById">
        update data_token
        set ciphertext_fee = #{ciphertextFee},
            plaintext_fee  = #{plaintextFee}
        where id = #{dataTokenId}
    </update>

    <update id="updateNewFeeById">
        update data_token
        set new_ciphertext_fee = #{ciphertextFee},
            new_plaintext_fee  = #{plaintextFee},
            fee_update_time    = current_timestamp()
        where id = #{dataTokenId}
    </update>

    <select id="selectByAddress" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from data_token
        where address = #{address}
    </select>

    <select id="countByUserAndPriced" resultType="int">
        select count(*)
        from data_token
        where
        owner = #{userAddress}
        and status = 6
    </select>

    <select id="countByUserAndUnPriced" resultType="int">
        select count(*)
        from data_token
        where
        owner = #{userAddress}
        and status != 6
    </select>
</mapper>